<?php

use Drupal\Core\Render\Element;
use Drupal\Core\Template\Attribute;

/**
 * @file
 * Functions to support theming in the pegakit theme.
 */

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function pegakit_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $route_name = strtolower(\Drupal::routeMatch()->getRouteName());
  $route_name = preg_replace('/[^a-z0-9_]/', '_', $route_name);
  $suggestions[] = 'page__' . $route_name;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function pegakit_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#form_id'])) {
    $suggestions[] = 'form__' . $variables['element']['#form_id'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function pegakit_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#type'])) {
    $suggestions[] = 'form_element__' . $variables['element']['#type'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function pegakit_theme_suggestions_form_element_label_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#label_parent_type'])) {
    $suggestions[] = 'form_element_label__' . $variables['element']['#label_parent_type'];
  }
}

/**
 * Implements hook_preprocess_form_element().
 */
function pegakit_preprocess_form_element(array &$variables) {
  $input_attributes = isset($variables['element']['#attributes']) ? $variables['element']['#attributes'] : array();
  $variables['input_element'] = array(
    'attributes' => new Attribute($input_attributes),
  );
  if (isset($variables['label'])) {
    $variables['label_element'] = array(
      'title' => !empty($variables['label']['#title']) ? $variables['label']['#title'] : NULL,
    );
  }
  if (isset($variables['element']['#type'])) {
    $variables['label']['#label_parent_type'] = $variables['element']['#type'];
  }
  if (isset($variables['element']['#pegakit_field'])) {
    $variables['pegakit_field'] = $variables['element']['#pegakit_field'];
  }
  else {
    $variables['pegakit_field'] = [];
  }
}

/**
 * Implements hook_preprocess_form_element_label().
 */
function pegakit_preprocess_form_element_label(array &$variables) {
  if (isset($variables['element']['#label_parent_type'])) {
    $variables['type'] = $variables['element']['#label_parent_type'];
  }
}

/**
 * Implements hook_preprocess_input().
 */
function pegakit_preprocess_input(array &$variables) {
  if (isset($variables['element']['#type'])) {
    $variables['type'] = $variables['element']['#type'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function pegakit_theme_suggestions_input_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#type'])) {
    $suggestions[] = 'input__' . $variables['element']['#type'];
  }
}

 /**
  * Implements hook_preprocess_HOOK() for menu_local_task templates.
  */
function pegakit_preprocess_menu_local_task(&$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'nav-link';
}

/**
 * Implements hook_preprocess_HOOK() for links templates.
 */
function pegakit_preprocess_links(&$variables) {
  foreach ($variables['links'] as $key => $item) {
    $variables['links'][$key]['link']['#options']['attributes']['class'][] = 'card-link';
  }
}

/**
 * Implements theme_preprocess_page().
 */
function pegakit_preprocess_page(&$variables) {
  $variables['logo_path'] = '/' . drupal_get_path('theme','pegakit') . '/logo.svg';
}

/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import { BoltCell as BoltCell } from './components/bolt-cell/bolt-cell';

interface HTMLBoltCellElement extends BoltCell, HTMLElement {
}
declare var HTMLBoltCellElement: {
  prototype: HTMLBoltCellElement;
  new (): HTMLBoltCellElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "bolt-cell": HTMLBoltCellElement;
  }
  interface ElementTagNameMap {
      "bolt-cell": HTMLBoltCellElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "bolt-cell": JSXElements.BoltCellAttributes;
      }
  }
  namespace JSXElements {
      export interface BoltCellAttributes extends HTMLAttributes {
        
          col?: string,
          colMd?: string
      }
  }
}

import { BoltGrid as BoltGrid } from './components/bolt-grid/bolt-grid';

interface HTMLBoltGridElement extends BoltGrid, HTMLElement {
}
declare var HTMLBoltGridElement: {
  prototype: HTMLBoltGridElement;
  new (): HTMLBoltGridElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "bolt-grid": HTMLBoltGridElement;
  }
  interface ElementTagNameMap {
      "bolt-grid": HTMLBoltGridElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "bolt-grid": JSXElements.BoltGridAttributes;
      }
  }
  namespace JSXElements {
      export interface BoltGridAttributes extends HTMLAttributes {
        
          center?: boolean | "true" | "false"
      }
  }
}

import { BoltH2 as BoltH2 } from './components/bolt-h2/bolt-h2';

interface HTMLBoltH2Element extends BoltH2, HTMLElement {
}
declare var HTMLBoltH2Element: {
  prototype: HTMLBoltH2Element;
  new (): HTMLBoltH2Element;
};
declare global {
  interface HTMLElementTagNameMap {
      "bolt-h2": HTMLBoltH2Element;
  }
  interface ElementTagNameMap {
      "bolt-h2": HTMLBoltH2Element;
  }
  namespace JSX {
      interface IntrinsicElements {
          "bolt-h2": JSXElements.BoltH2Attributes;
      }
  }
  namespace JSXElements {
      export interface BoltH2Attributes extends HTMLAttributes {
        
          tag?: any,
          size?: any
      }
  }
}

import { BoltHeadline as BoltHeadline } from './components/bolt-headline/bolt-headline';

interface HTMLBoltHeadlineElement extends BoltHeadline, HTMLElement {
}
declare var HTMLBoltHeadlineElement: {
  prototype: HTMLBoltHeadlineElement;
  new (): HTMLBoltHeadlineElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "bolt-headline": HTMLBoltHeadlineElement;
  }
  interface ElementTagNameMap {
      "bolt-headline": HTMLBoltHeadlineElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "bolt-headline": JSXElements.BoltHeadlineAttributes;
      }
  }
  namespace JSXElements {
      export interface BoltHeadlineAttributes extends HTMLAttributes {
        
          tag?: any,
          size?: any
      }
  }
}

import { BoltIcons as BoltIcons } from './components/bolt-icons/bolt-icons';

interface HTMLBoltIconsElement extends BoltIcons, HTMLElement {
}
declare var HTMLBoltIconsElement: {
  prototype: HTMLBoltIconsElement;
  new (): HTMLBoltIconsElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "bolt-icons": HTMLBoltIconsElement;
  }
  interface ElementTagNameMap {
      "bolt-icons": HTMLBoltIconsElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "bolt-icons": JSXElements.BoltIconsAttributes;
      }
  }
  namespace JSXElements {
      export interface BoltIconsAttributes extends HTMLAttributes {
        
          tag?: any,
          size?: any
      }
  }
}

import { BoltIcons as BoltIcons } from './components/brightcove-player/brightcove-player';

interface HTMLBoltIconsElement extends BoltIcons, HTMLElement {
}
declare var HTMLBoltIconsElement: {
  prototype: HTMLBoltIconsElement;
  new (): HTMLBoltIconsElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "bolt-icons": HTMLBoltIconsElement;
  }
  interface ElementTagNameMap {
      "bolt-icons": HTMLBoltIconsElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "bolt-icons": JSXElements.BoltIconsAttributes;
      }
  }
  namespace JSXElements {
      export interface BoltIconsAttributes extends HTMLAttributes {
        
          tag?: any,
          size?: any
      }
  }
}

import { MyName as MyName } from './components/my-name/my-name';

interface HTMLMyNameElement extends MyName, HTMLElement {
}
declare var HTMLMyNameElement: {
  prototype: HTMLMyNameElement;
  new (): HTMLMyNameElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "my-name": HTMLMyNameElement;
  }
  interface ElementTagNameMap {
      "my-name": HTMLMyNameElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "my-name": JSXElements.MyNameAttributes;
      }
  }
  namespace JSXElements {
      export interface MyNameAttributes extends HTMLAttributes {
        
          first?: string,
          last?: string
      }
  }
}


@import './constants';
@import './helpers';
@import '../../02-tools/tools-text-contrast/tools-text-contrast';


// $bolt-global-default-theme: 'xlight';
$bolt-theme-disabled: bolt-color(gray, light);
$bolt-theme-primary-light: bolt-color(indigo, light);
$bolt-theme-primary-dark: bolt-color(yellow);
$bolt-theme-secondary: bolt-color(white);
$bolt-theme-secondary-dark: mix(bolt-color(black), $bolt-theme-secondary, 5%);
$bolt-theme-secondary-xdark: mix(bolt-color(black), $bolt-theme-secondary, 15%);


// pre-defined theming system values
$bolt-theme-ui-colors: (
  light: (
    headline: bolt-color(white),
    headline-link: bolt-color(white),
    text: bolt-color(white),
    link: bolt-color(yellow),
    text-disabled: bolt-color(gray),
    border: rgba(bolt-color(white), 0.2),
    contrast-filter: grayscale(100%) invert(100%) brightness(150%),
  ),
  dark: (
    headline: bolt-color(indigo),
    headline-link: bolt-color(indigo, light),
    text: bolt-color(black),
    text-disabled: bolt-color(gray),
    link: bolt-color(indigo, light),
    border: rgba(bolt-color(indigo, dark), 0.2),
    contrast-filter: none,
  ),
) !default;


$bolt-themes: (
  xlight: (
    background: bolt-color(white),
    primary: $bolt-theme-primary-light,
  ),
  light: (
    background: bolt-color(gray, xlight),
    primary: $bolt-theme-primary-light,
  ),

  // Deprecated -- will be removed in Bolt v2.0
  medium: (
    background: bolt-color(gray, xlight),
    primary: $bolt-theme-primary-light,
  ),
  dark: (
    background: bolt-color(indigo),
    primary: $bolt-theme-primary-dark,
  ),
  xdark: (
    background: bolt-color(indigo, dark),
    primary: $bolt-theme-primary-dark,
  ),
);



// combine the two sets of theming system data and calculate the dynamic values
@each $themeName, $themeProps in $bolt-themes {
  $background: map-get($themeProps, background);

  $lightOrDark: bolt-theme-contrast-tone($background);
  $bolt-ui-colors: map-get($bolt-theme-ui-colors, $lightOrDark);

  $primary: map-get($themeProps, primary);

  $primary-light: mix(bolt-color(white), $primary, 15%);
  $primary-xlight: mix(bolt-color(white), $primary, 25%);

  $primary-dark: mix(bolt-color(black), $primary, 15%);
  $primary-xdark: mix(bolt-color(black), $primary, 25%);

  $bolt-themes: bolt-recursive-map-merge(
    $bolt-themes,
      (
        #{$themeName}: $bolt-ui-colors
      )
  );

  $bolt-themes: bolt-recursive-map-merge(
    $bolt-themes,
    (
      #{$themeName}: (
        background: $background,
        background-30: rgba($background, 0.3),
        background-80: rgba($background, 0.8),

        disabled: $bolt-theme-disabled,

        border: bolt-theme-ui-color(border, $background),

        primary: $primary,
        text-on-primary: bolt-text-contrast($primary),

        primary-light: $primary-light,
        text-on-primary-light: bolt-text-contrast($primary-light),

        primary-xlight: $primary-xlight,
        text-on-primary-xlight: bolt-text-contrast($primary-xlight),

        primary-dark: $primary-dark,
        text-on-primary-dark: bolt-text-contrast($primary-dark),

        primary-xdark: $primary-xdark,
        text-on-primary-xdark: bolt-text-contrast($primary-xdark),


        secondary: $bolt-theme-secondary,
        secondary-dark: $bolt-theme-secondary-dark,
        secondary-xdark: $bolt-theme-secondary-xdark,

        text-on-secondary: bolt-text-contrast($bolt-theme-secondary),
        text-on-secondary-dark: bolt-text-contrast($bolt-theme-secondary-dark),
        text-on-secondary-xdark: bolt-text-contrast($bolt-theme-secondary-xdark),
      )
    )
  );
}


$bolt-themes-export: ();

@each $themeName, $themeOptions in $bolt-themes {
  @each $themeOptionName, $themeOptionValue in $themeOptions {
    @if type-of($themeOptionValue) == color {
      $bolt-themes-export: map-set-deep($bolt-themes-export, ($themeName, $themeOptionName), rgba($themeOptionValue, 1));
    }
  }
}

@include bolt-export-data($bolt-css-vars-json-data-export + '.json', $bolt-themes-export);
@include bolt-export-data('theming.bolt.json', $bolt-themes);


/* ------------------------------------ *\
  Color Palette
\* ------------------------------------ */

/**
  * Helper functions for applying global color swatches stored in Sass Maps
  */
@import '../tools-auto-convert-color/tools.convert-color.scss';

@function bolt-color(
  $color,
  $tone: 'base'
) {
  @if $tone == 'base' {
    @return bolt-convert-color(bolt-data('colors.#{$color}'));
  } @else {
    @return bolt-convert-color(bolt-data('colors.#{$color}-#{$tone}'));
  }
}

// Mixin to return color value + !important if needed.
@mixin bolt-color(
  $color,
  $tone: 'base',
  $important: null
) {
  @if $important == important {
    $important: !important;
  }

  /* stylelint-disable-next-line */
  color: bolt-color($color, $tone) $important;
}

/* stylelint-disable-next-line scss/at-function-pattern */
@function palette($args...) {
  @warn 'PegaKit\'s `palette` function is deprecated and will be removed in v1.0.0 of Bolt. Use the new @color() function instead.';

  @return bolt-color($args...);
}
/* stylelint-enable */

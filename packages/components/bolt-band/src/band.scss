/* ------------------------------------ *\
   Band
\* ------------------------------------ */

@import '@bolt/core';

bolt-band {
  display: flex; // So children increase in height
  width: 100%;
  height: 100%;
  min-height: 0;
  max-height: none;
  will-change: height, min-height;
  transition: min-height $bolt-transition;

  &.is-expanded {
    min-height: 56.25vh;
  }
}

.c-bolt-band {
  display: block;
  position: relative; //Needed for absolutely positioned inner elements, like the background component.
  width: 100%;
  min-height: 0;
  transition: min-height 0.3s ease; // don't transition band widths
}

$bolt-band-sizes: (
  'xsmall': bolt-v-spacing(small),
  'small': bolt-v-spacing(medium),
  'medium': bolt-v-spacing(large),
  'large': bolt-v-spacing(xlarge),
);

@each $size in $bolt-band-sizes {
  $size-name: nth($size, 1);
  $size-value: nth($size, 2);

  .c-bolt-band--#{$size-name} {
    padding-top: $size-value;
    padding-bottom: $size-value;

    .c-bolt-band__pinned-area {
      min-height: $size-value;
    }

    .c-bolt-band__pinned-area--upper {
      margin-top: $size-value * -1;
    }

    .c-bolt-band__pinned-area--lower {
      margin-bottom: $size-value * -1;
    }
  }
}

.c-bolt-band--full-bleed {
  @include bolt-full-bleed;
}



.c-bolt-band__content,
.c-bolt-band__pinned-area {
  position: relative;
}

.c-bolt-band__pinned-area {
  display: flex;

  &--upper {
    align-items: flex-start;
  }

  &--lower {
    align-items: flex-end;
  }

  > * {
    width: 100%;
  }
}


.c-bolt-band__pinned-items {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: space-between;
  flex: 1;
  margin-top: bolt-v-spacing(small) / 2;
  margin-right: bolt-spacing(xsmall) * -1 / 2;
  margin-bottom: bolt-v-spacing(small) / 2;
  margin-left: bolt-spacing(xsmall) * -1 / 2;
}

.c-bolt-band__pinned-item {
  padding-top: bolt-v-spacing(xsmall) / 2;
  padding-right: bolt-spacing(xsmall) / 2;
  padding-bottom: bolt-v-spacing(xsmall) / 2;
  padding-left: bolt-spacing(xsmall) / 2;
  line-height: 1;

  // Align modifiers are only needed if there's only one item.
  &--start:only-child {
    margin-right: auto;
    margin-left: 0;
  }

  &--end:only-child {
    margin-right: 0;
    margin-left: auto;
  }

  &--center:only-child {
    margin-right: auto;
    margin-left: auto;
  }
}

{% import "@bolt-components-link/_link-macros.twig" as macros %}

{% set schema = bolt.data.components["@bolt-components-link"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# set up psuedo self-validation by limiting param values to what's specifically allowed in the component schema #}
{% set icon_positions = schema.properties.icon.properties.position.enum %}

{# Variables #}
{% set base_class = "c-bolt-link" %}

{% set classes = [
  base_class,
  isHeadline ? 'c-bolt-link--headline' : ''
] %}

{% if icon %}
  {% set icon_position = icon.position in icon_positions ? icon.position : schema.properties.icon.properties.position.default %}
{% endif %}

{% set attributes = create_attribute(attributes | default(attributes) | default({})) %}
{% set attributes = attributes.addClass(classes) %}

{% if url or attributes['url'] %}
  {% set url = url | default(attributes['url']) %}
{% elseif href or attributes['href'] %}
  {% set url = href | default(attributes['href']) %}
{% endif %}

{% if target or attributes['target'] %}
  {% set target = target | default(attributes['target']) %}
{% endif %}

{% if onClick or attributes['on-click'] %}
  {% set onClick = onClick | default(attributes['on-click']) %}
{% endif %}

{% if onClickTarget or attributes['on-click-target'] %}
  {% set onClickTarget = onClickTarget | default(attributes['on-click-target']) %}
{% endif %}

{#
Sort classes passed in via attributes into two groups:
1. Those that should be applied to the inner tag (namely, "is-" and "has-" classes)
2. Those that should be applied to the outer custom element (everything else EXCEPT c-bolt-* classes, which should never be passed in via atttributes)
#}
{% set outerClasses = [] %}
{% set innerClasses = classes %}

{% for class in attributes["class"] %}
  {% if class starts with "is-" or class starts with "has-" %}
    {% set innerClasses = innerClasses|merge([class]) %}
  {% elseif class starts with "c-bolt-" == false %}
    {% set outerClasses = outerClasses|merge([class]) %}
  {% endif %}
{% endfor %}

{# Filter out attributes assigned above #}
{% set filteredAttributes = attributes | without('url') | without('href') | without('target') | without('class') %}

{# link component's custom element wrapper #}
<bolt-link
  {{ filteredAttributes }}
  {% if url %} url="{{ url }}" {% endif %}
  {% if target %} target="{{ target }}" {% endif %}
  {% if isHeadline %} is-headline="true" {% endif %}
  {% if outerClasses %} class="{{ outerClasses|join(' ') }}" {% endif %}

  {# todo: rename on-click + on-click-target to only allow onClick + onClickTarget to unify the prop syntax; deprecate adding these via attributes #}
  {% if onClick %} on-click="{{ onClick }}" {% endif %}
  {% if onClickTarget %} on-click-target="{{ onClickTarget }}" {% endif %}
>
  {# Add semantic <a> tag for better accessibility #}
  <a
    {{ filteredAttributes }}
    {% if url %} href="{{ url }}" {% endif %}
    {% if target %} target="{{ target }}" {% endif %}
    class="{{ innerClasses|join(' ') }}"
    is="shadow-root"
  >
    {{ macros.slotted_icon(icon, icon_position, 'before') }}
    <replace-with-children class="{{ "#{base_class}__text" }}">
      {{ text | default(label) | default("Learn More") }}
    </replace-with-children>
    {{ macros.slotted_icon(icon, icon_position, 'after') }}
  </a>
</bolt-link>

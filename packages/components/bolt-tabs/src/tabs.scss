/* ------------------------------------ *\
   Tabs
\* ------------------------------------ */

@import '@bolt/core';
@import '_tabs-settings-and-tools.scss';

@include bolt-custom-element('bolt-tabs', block, medium);

bolt-tabs {
  text-align: initial; // unset user-agent styles targeting `align` prop
}

.c-bolt-tabs__label {
  // @todo: copied from navlink, refactor into shared styles
  @include bolt-font-size(small);
  @include bolt-font-weight(semibold);

  display: flex;
  flex-shrink: 0;
  opacity: 0.9;
  position: relative;
  color: bolt-theme(headline-link);
  text-decoration: none;
  border-color: transparent;
  transition: opacity $bolt-tabs-text-transition;

  &:not([aria-selected='true']) {
    &:hover,
    &:focus {
      .c-bolt-tabs__label-text:after {
        opacity: bolt-opacity(40);
        transition: opacity $bolt-selected-tab-border-transition-timing
          $bolt-selected-tab-border-transition-ease;
      }
    }
  }

  &[aria-selected='true'] {
    color: bolt-theme(headline);

    .c-bolt-tabs__label-text:after {
      opacity: bolt-opacity(100);
    }
  }
}

// extra wrapping SPAN to help with inset padding
.c-bolt-tabs__label-inner {
  display: block;
}

.c-bolt-tabs__label-text {
  display: block;
  position: relative; // required for z-index layering
  @include bolt-font-size(medium);
  @include bolt-font-weight(semibold);
  @include bolt-padding-bottom(xsmall);

  &:after {
    content: '';
    opacity: bolt-opacity(0);
    position: absolute;
    bottom: 0;
    left: 0; // required so animated position is correct in IE11
    width: 100%;
    height: ($bolt-selected-tab-border-size);
    background-color: bolt-theme(primary);
    will-change: opacity;
  }
}

// Label spacing
@each $spacing-value in $bolt-spacing-values {
  $spacing-value-name: nth($spacing-value, 1);

  @if (
    $spacing-value-name !=
      '' and
      $spacing-value-name !=
      'xxsmall' and
      $spacing-value-name !=
      'large' and
      $spacing-value-name !=
      'xlarge' and
      $spacing-value-name !=
      'xxlarge'
  ) {
    .c-bolt-tabs:not(.c-bolt-tabs--inset) {
      .c-bolt-tabs__label--spacing-#{$spacing-value-name} {
        &:not(:last-child) {
          .c-bolt-tabs__label-inner {
            @include bolt-padding-right(#{$spacing-value-name});
          }
        }
      }
    }
    .c-bolt-tabs--inset {
      .c-bolt-tabs__label--spacing-#{$spacing-value-name} {
        .c-bolt-tabs__label-text {
          @include bolt-padding(#{$spacing-value-name}, squished);
        }
      }
    }
  }
}

.c-bolt-tabs__nav {
  @include bolt-margin-bottom(0);
  display: flex;
  flex-flow: row nowrap;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;

  // Label align
  @at-root .c-bolt-tabs--align-center & {
    justify-content: center;
  }
  @at-root .c-bolt-tabs--align-start & {
    justify-content: flex-start;
  }
  @at-root .c-bolt-tabs--align-end & {
    justify-content: flex-end;
  }
  @media (prefers-reduced-motion: reduce) {
    scroll-behavior: auto;
  }
}

// No-JS styles
bolt-tabs:not([ready]) {
  .c-bolt-tabs {
    display: flex;
    flex-wrap: wrap;
  }

  // No-JS align styles
  .c-bolt-tabs--align-center {
    justify-content: center;
  }
  .c-bolt-tabs--align-start {
    justify-content: flex-start;
  }
  .c-bolt-tabs--align-end {
    justify-content: flex-end;
  }
}

.c-bolt-tabs__input:not(:checked) + .c-bolt-tabs__label {
  cursor: pointer;
}

.c-bolt-tabs__input:checked + .c-bolt-tabs__label {
  color: bolt-theme(headline);

  &:hover,
  &:focus {
    &:before {
      display: none;
    }
  }

  .c-bolt-tabs__label-text:after {
    opacity: bolt-opacity(100);
  }
}

.c-bolt-tabs__input {
  opacity: 0;
  position: absolute;

  &:checked
    + .c-bolt-tabs__label
    + .c-bolt-tab-panel__outer
    .c-bolt-tab-panel__content {
    display: block;
  }
}

.c-bolt-tabs__input:last-of-type
  + .c-bolt-tabs__label
  .c-bolt-tabs__label-inner {
  @include bolt-padding-right(0, important);
}

{% set schema = bolt.data.components["@bolt-components-button"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set this = init(schema) %}
{% set attributes = create_attribute(attributes|default({})) %}

{# choose a semantic <a> tag or <button> tag for better accessibility, depending on whether or not a url is getting passed along #}
{% if url != null %}
  {% set tag = "a" %}
  {% if disabled %}
    {% set attributes = attributes.setAttribute("aria-disabled", "true") %}
  {% else %}
    {% if url %}
      {% set attributes = attributes.setAttribute("href", url) %}
    {% endif %}
  {% endif %}
  {% if attributes.target %}
    {% set attributes = attributes.setAttribute("target", attributes.target) %}
  {% endif %}
{% else %}
  {% set tag = "button" %}
  {% if type in type_options %}
    {% set attributes = attributes.setAttribute("type", type ) %}
  {% endif %}
{% endif %}

{# set boolean to match iconOnly #}
{% set iconOnly = iconOnly is sameas(true) or iconOnly is sameas(false) ? iconOnly : scheuma.properties.iconOnly.default %}

{# Array of classes based on the defined + default props #}
{% set classes = [
  "c-bolt-button",
  this.data.disabled.value ? "c-bolt-button--disabled",
  this.data.size.value ? "c-bolt-button--" ~ this.data.size.value,
  this.data.style.value ? "c-bolt-button--" ~ this.data.style.value,
  this.data.width.value != "auto" ? "c-bolt-button--" ~ this.data.width.value,
  this.data.border_radius.value ? "c-bolt-button--border-radius-" ~ this.data.border_radius.value,
  this.data.align.value ? "c-bolt-button--" ~ this.data.align.value,
  this.data.transform.value != "none" ? "c-bolt-button--" ~ this.data.transform.value,
  iconOnly ? "c-bolt-button--icon-only",
] %}

{# Filter out classes that begin with `c-bolt-*`. These should never be passed in via atttributes. #}
{% for class in attributes["class"] %}
  {% if class starts with "c-bolt-" == false %}
    {% set classes = classes|merge([class]) %}
  {% endif %}
{% endfor %}

{% if disabled %}
  {% set attributes = attributes.setAttribute("disabled", true) %}
{% endif %}

{% if icon %}
  {% set icon_position = icon.position ? icon.position : schema.properties.icon.properties.position.default %}
{% endif %}

{% macro slottedIcon(icon, icon_position, slotName) %}
  {% if icon and icon_position == slotName %}
    <span class="c-bolt-button__icon c-bolt-button__icon-sizer">
      {% set icon = icon | merge({
        attributes: {
          slot: slotName,
          class: icon.attributes.class | default([])
        }
      }) %}
      {% include "@bolt-components-icon/icon.twig" with icon only %}
    </span>
  {% endif %}
{% endmacro %}

{% import _self as macros %}

<{{ tag }}
  {% if url %}
    href="{{ url }}"
    {% if target %}target="{{ target }}" {% endif %}
  {% endif %}
  class="{{ classes|join(' ') }}"
  {{ attributes|without("url")|without("href")|without("target")|without("class") }}
>

  {% block slot_before %}
    {{ macros.slottedIcon(icon, icon_position, "before") }}
  {% endblock %}
  <span class="c-bolt-button__item">{{ text }}</span>
  {% block slot_after %}
    {{ macros.slottedIcon(icon, icon_position, 'after') }}
  {% endblock %}

</{{ tag }}>

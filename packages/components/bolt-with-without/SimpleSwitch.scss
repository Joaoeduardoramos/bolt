$simple-switch_color: bolt-color('white') !default;
$simple-switch_focus-color: #03A9F4 !default;
$simple-switch_focus-ring-size: 7px !default;
$simple-switch_handle-color: bolt-color('teal', 'light') !default;
$simple-switch_outline-size: 4px !default;
// this is just a default value/fallback for older browsers
$simple-switch_size: 175px !default;
// @TODO make this be the animation tokens
$simple-switch_switch-speed: 250ms !default;
$simple-switch_tray-color: bolt-color('white') !default;

// sass-lint:disable-all

// Hide the checkbox, but keep it in the DOM so it is visible to screen readers
._simple-switch-checkbox {
    opacity: 0;
    width: 0px;
    height: 0px;
    overflow: hidden;
}

._simple-switch-track {
    --simple-switch_size: #{$simple-switch_size};

    display: inline-block;
    box-sizing: padding-box;
    position: relative;
    padding: 0 calc((#{$simple-switch_size} * 1.25) - #{$simple-switch_outline-size * 2}) 0 0;
    vertical-align: baseline;
    border: #{$simple-switch_outline-size} solid $simple-switch_tray-color;
    border-radius: $simple-switch_size;
    outline: none;
    background: $simple-switch_tray-color;
    transition: background $simple-switch_switch-speed ease-out,
                border $simple-switch_switch-speed ease-out;

    @supports(--foobar: false) {
        padding: 0 calc((var(--simple-switch_size) * 1.25) - #{$simple-switch_outline-size * 2}) 0 0;
        border-radius: var(--simple-switch_size);
    }

    &.on {
        border: #{$simple-switch_outline-size} solid $simple-switch_color;
        background: $simple-switch_color;

        .handle {
            transform: translateX(calc((#{$simple-switch_size} * 1.25) - #{$simple-switch_outline-size * 2}));

            @supports(--foobar: false) {
                transform: translateX(calc((var(--simple-switch_size) * 1.25) - #{$simple-switch_outline-size * 2}));
            }
        }
    }

    &.focus {
        border: #{$simple-switch_outline-size} solid $simple-switch_focus-color;
    }

    .handle {
        display: block;
        position: relative;
        z-index: 2;
        width: calc(#{$simple-switch_size - ($simple-switch_outline-size * 2)});
        height: calc(#{$simple-switch_size - ($simple-switch_outline-size * 2)});
        border-radius: $simple-switch_size;
        background: $simple-switch_handle-color;
        will-change: transition;
        transition: transform $simple-switch_switch-speed ease-out;

        @supports(--foobar: false) {
            width: calc(var(--simple-switch_size) - #{$simple-switch_outline-size * 2});
            height: calc(var(--simple-switch_size) - #{$simple-switch_outline-size * 2});
            border-radius: var(--simple-switch_size);
        }
    }

    // Material mode (makes the Switch match the material.io spec)
    &._material {
        width: #{$simple-switch_size * 1.5};
        height: #{$simple-switch_size - $simple-switch_outline-size};
        margin: $simple-switch_outline-size 0;
        padding: 0;
        vertical-align: top;
        border: none;

        @supports(--foobar: false) {
            width: calc(var(--simple-switch_size) * 1.5);
            height: calc(var(--simple-switch_size) - #{$simple-switch_outline-size});
        }

        &.on {
            background: $simple-switch_color;

            &:after {
                transform: translateX(#{$simple-switch_size - $simple-switch_outline-size});

                @supports(--foobar: false) {
                    transform: translateX(calc(var(--simple-switch_size) - #{$simple-switch_outline-size}));
                }
            }

            .handle {
                transform: translateX(#{$simple-switch_size - $simple-switch_outline-size});
                background: darken($simple-switch_color, 15%);

                @supports(--foobar: false) {
                    transform: translateX(calc(var(--simple-switch_size) - #{$simple-switch_outline-size}));
                }
            }
        }

        // this represents the focus state ring
        &:after {
            $_extra: $simple-switch_focus-ring-size;

            content: "";
            opacity: 0;
            position: absolute;
            top: #{(-0.75 * $simple-switch_outline-size) - $_extra};
            left: #{(-1 * $simple-switch_outline-size) - $_extra};
            z-index: 1;
            width: ($simple-switch_size + ($_extra * 2));
            height: ($simple-switch_size + ($_extra * 2));
            border-radius: ($simple-switch_size + ($_extra * 2));
            background: rgba(0, 0, 0, 0.125);
            will-change: opacity;
            transition: opacity $simple-switch_switch-speed ease-out,
                        transform $simple-switch_switch-speed ease-out;

            @supports(--foobar: false) {
                width: calc(var(--simple-switch_size) + #{$_extra * 2});
                height: calc(var(--simple-switch_size) + #{$_extra * 2});
                border-radius: calc(var(--simple-switch_size) + #{$_extra * 2});
            }
        }

        &.focus:after {
            opacity: 1;
        }

        .handle {
            position: absolute;
            top: #{-0.75 * $simple-switch_outline-size};
            left: #{-1 * $simple-switch_outline-size};
            width: $simple-switch_size;
            height: $simple-switch_size;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);
            transition: transform $simple-switch_switch-speed ease-out,
                        background $simple-switch_switch-speed ease-out;

            @supports(--foobar: false) {
                width: var(--simple-switch_size);
                height: var(--simple-switch_size);
            }
        }
    }
}

{% set schema = bolt.data.components["@bolt-components-accordion"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set base_class = "c-bolt-accordion-item" %}
{% set this = init(schema.properties.items.items) %}
{% set inner_attributes = create_attribute({}) %}

{% set uuid = this.data.uuid|default(random()) %}
{% set primary_uuid = uuid ? "c-bolt-accordion-item-#{uuid}" : "c-bolt-accordion-item-#{random_uuid}" %}
{% set secondary_uuid = uuid ? "c-bolt-accordion-item-inner-#{uuid}" : "c-bolt-accordion-item-inner-#{random_uuid}" %}

{# init() will not return 'trigger' value because it is not a tring or boolean #}
{% set trigger = trigger|default(schema.properties.items.items.trigger.default) %}

{# Array of classes based on the defined + default props #}
{% set classes = [
  base_class,
  shadow ? base_class ~ "--shadow" : "",
  separator ? "c-bolt-accordion-item--separator" : "" ,
  first ? "c-bolt-accordion-item--first-item" : "" ,
  last ? "c-bolt-accordion-item--last-item" : "" 
] %}

{% set spacing_class = spacing ? base_class ~ "--spacing-" ~ spacing : "" %}
{#
  Sort classes passed in via attributes into two groups:
  1. Those that should be applied to the inner tag (namely, "is-" and "has-" classes)
  2. Those that should be applied to the outer custom element (everything else EXCEPT c-bolt-* classes, which should never be passed in via attributes)
#}
{% set outer_classes = [] %}
{% set inner_classes = classes %}

{% for class in this.props.class %}
  {% if class starts with "is-" or class starts with "has-" %}
    {% set inner_classes = inner_classes|merge([class]) %}
  {% elseif class starts with "c-bolt-" == false %}
    {% set outer_classes = outer_classes|merge([class]) %}
  {% endif %}
{% endfor %}

<bolt-accordion-item
  {% if outer_classes %} class="{{ outer_classes|join(' ') }}" {% endif %}
  {{ this.props|without("content")|without("class") }}
  >
  <input class="c-bolt-accordion__state" type="checkbox" id="{{ primary_uuid }}" {% if auto_open %} checked{% endif %}>

  <replace-with-grandchildren
    {{ inner_attributes.addClass(inner_classes) }}
    id="{{ secondary_uuid }}">

    <div class="c-bolt-accordion__header">
      <replace-with-grandchildren>
        <label class="c-bolt-accordion__header-label {{ spacing_class }}" for="{{ primary_uuid }}">
          <replace-with-children class="c-bolt-accordion__header-title">
            <div slot="header">{{ trigger }}</div>
          </replace-with-children>
        </label>
      </replace-with-grandchildren>

      <a href="#{{ primary_uuid }}" class="c-bolt-accordion__header-link c-bolt-accordion__header-link c-bolt-accordion__header-link--open">
        <span class="c-bolt-accordion__toggle-text">{{ this.data.open_label.value }}</span>
      </a>

      <a href="#{{ secondary_uuid }}" class="c-bolt-accordion__header-link c-bolt-accordion__header-link--close">
        <span class="c-bolt-accordion__toggle-text">{{ this.data.close_label.value }}</span>
      </a>
    </div>

    <replace-with-grandchildren class="c-bolt-accordion__content">
      <div class="c-bolt-accordion__content-inner {{ spacing_class }}">
        {{ content }}
      </div>
    </replace-with-grandchildren>

  </replace-with-grandchildren>
</bolt-accordion-item>
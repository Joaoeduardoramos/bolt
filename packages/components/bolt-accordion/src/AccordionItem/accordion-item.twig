{% set schema = bolt.data.components["@bolt-components-accordion"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set base_class = "c-bolt-accordion-item" %}
{% set this = init(schema.properties.items.items) %}
{% set inner_attributes = create_attribute({}) %}

{% set uuid = this.data.uuid|default(bolt.data.config.env == "test" ? "12345" : random()) %}
{% set primary_uuid = uuid ? base_class ~ "-#{uuid}" : base_class ~ "-#{random_uuid}" %}
{% set secondary_uuid = uuid ? base_class ~ "-inner-#{uuid}" : base_class ~ "-inner-#{random_uuid}" %}

{# init() will not return 'trigger' value because it is not a tring or boolean #}
{% set trigger = trigger|default(schema.properties.items.items.trigger.default) %}

{# Array of classes based on the defined + default props #}
{% set classes = [
  base_class,
  box_shadow ? base_class ~ "--box-shadow" : "",
  no_separator ? "" : base_class ~ "--separator",
  icon_valign and icon_valign != "center" ? base_class ~ "--icon-valign-" ~ icon_valign : "",
  first ? base_class ~ "--first-item" : "",
  last ? base_class ~ "--last-item" : ""
] %}

{% set spacing_class = spacing ? "c-bolt-accordion-spacing--" ~ spacing : "" %}
{#
  Sort classes passed in via attributes into two groups:
  1. Those that should be applied to the inner tag (namely, "is-" and "has-" classes)
  2. Those that should be applied to the outer custom element (everything else EXCEPT c-bolt-* classes, which should never be passed in via attributes)
#}
{% set outer_classes = [] %}
{% set inner_classes = classes %}

{% for class in this.props.class %}
  {% if class starts with "is-" or class starts with "has-" %}
    {% set inner_classes = inner_classes|merge([class]) %}
  {% elseif class starts with "c-bolt-" == false %}
    {% set outer_classes = outer_classes|merge([class]) %}
  {% endif %}
{% endfor %}

<bolt-accordion-item
  {% if outer_classes %} class="{{ outer_classes|join(' ') }}" {% endif %}
  {{ this.props|without("content")|without("class") }}
  >
  <input class="c-bolt-accordion-item__state" type="checkbox" id="{{ primary_uuid }}" {% if auto_open %} checked{% endif %}>

  <replace-with-children
    {{ inner_attributes.addClass(inner_classes) }}
    id="{{ secondary_uuid }}">

    <replace-with-children class="c-bolt-accordion-item__trigger">
      <replace-with-grandchildren>
        <label class="c-bolt-accordion-item__trigger-label {{ spacing_class }}" for="{{ primary_uuid }}">
          <replace-with-children class="c-bolt-accordion-item__trigger-content">
            <div slot="trigger">{{ trigger }}</div>
          </replace-with-children>
        </label>
      </replace-with-grandchildren>

      <a href="#{{ primary_uuid }}" class="c-bolt-accordion-item__trigger-link c-bolt-accordion-item__trigger-link--open {{ spacing_class }}">
        <span class="c-bolt-accordion-item__toggle-text">{{ this.data.open_label.value }}</span>
      </a>

      <a href="#{{ secondary_uuid }}" class="c-bolt-accordion-item__trigger-link c-bolt-accordion-item__trigger-link--close {{ spacing_class }}">
        <span class="c-bolt-accordion-item__toggle-text">{{ this.data.close_label.value }}</span>
      </a>
    </replace-with-children>

    <replace-with-grandchildren class="c-bolt-accordion-item__content">
      <div class="c-bolt-accordion-item__content-inner {{ spacing_class }}">
        {{ content }}
      </div>
    </replace-with-grandchildren>

  </replace-with-children>
</bolt-accordion-item>

{% set schema = bolt.data.components["@bolt-components-trigger"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set base_class = "c-bolt-trigger" %}
{% set this = init(schema) %}
{% set inner_attributes = create_attribute({}) %}

{% set tag = this.data.tag.value %}
{% set display = this.data.display.value %}
{% set cursor = this.data.cursor.value %}
{% set url = this.data.url.value %}
{% set target = this.data.target.value %}

{% if url %}
  {# If url is provided, automatically set tag to "a" #}
  {% set tag = "a" %}
  {% set inner_attributes = inner_attributes.setAttribute("href", url) %}

  {# only set target if url is provided #}
  {% if target %}
    {% set inner_attributes = inner_attributes.setAttribute("target", target) %}
  {% endif %}
{% endif %}

{% if tag == "button" %}
  {% set inner_attributes = inner_attributes.setAttribute("type", "button") %}
{% endif %}

{# Array of classes based on the defined + default props #}
{% set classes = [
  base_class,
  display and display != schema.properties.display.default ? "#{base_class}--display-#{display}" : "",
  cursor and cursor != schema.properties.cursor.default ? "#{base_class}--cursor-#{cursor}" : "",
] %}

{#
  Sort classes passed in via attributes into two groups:
  1. Those that should be applied to the inner tag (namely, "is-" and "has-" classes)
  2. Those that should be applied to the outer custom element (everything else EXCEPT c-bolt-* classes, which should never be passed in via attributes)
#}
{% set outer_classes = [] %}
{% set inner_classes = classes %}

{% for class in this.props.class %}
  {% if class starts with "is-" or class starts with "has-" %}
    {% set inner_classes = inner_classes|merge([class]) %}
  {% elseif class starts with "c-bolt-" == false %}
    {% set outer_classes = outer_classes|merge([class]) %}
  {% endif %}
{% endfor %}

{% set inner_attributes = inner_attributes.addClass(inner_classes) %}

{# Filter out attributes assigned above #}
{% set filtered_attributes = attributes | without("url") | without("href") | without("target") | without("class") %}

<bolt-trigger
  {% if outer_classes %} class="{{ outer_classes|join(' ') }}" {% endif %}
  {{ this.props|without("content")|without("class") }}
>
  <{{ tag }} {{ inner_attributes|without("on-click")|without("on-click-target") }} is="shadow-root">
    {{ content }}
  </{{ tag }}>
</bolt-trigger>

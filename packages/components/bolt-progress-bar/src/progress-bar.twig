{% macro _normalizedValue(value, min, max) %}
  {% set nV = '' %}

  {% if (not value and value != 0) %}
    {% set nV = 0 %}
  {% elseif (min >= max) %}
    {% set nV = max %}
  {% else %}
    {% set nV = (value - min) / (max - min) %}
    {% set _max = max(nV, 0) %}
    {% set nV = min(_max, 1) %}
  {% endif %}

  {{ (nV * 100)|round }}
{% endmacro %}

{% set schema = bolt.data.components["@bolt-components-progress-bar"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set this = init(schema) %}
{% set inner_attributes = create_attribute({}) %}

{# Array of classes based on the defined + default props #}
{% set classes = [
  "c-bolt-progress-bar",
  this.data.value >= this.data.max ? "is-filled" : "",
  this.data.value <= this.data.min ? "is-empty" : "",
  this.data.animated ? "c-bolt-progress-bar--animated" : "",
  "c-bolt-progress-bar--" ~ this.data.value_position,
] %}

{% set fillClasses = [
  "c-bolt-progress-bar__fill",
  this.data.value >= this.data.max ? "c-bolt-progress-bar__fill--at-max" : "",
] %}

{% set outer_classes = [] %}
{% set inner_classes = classes %}

{% for class in attributes["class"] %}
  {% if class starts with "is-" or class starts with "has-" %}
    {% set inner_classes = inner_classes|merge([class]) %}
  {% elseif class starts with "c-bolt-" == false %}
    {% set outer_classes = outer_classes|merge([class]) %}
  {% endif %}
{% endfor %}

{% set percentComplete = _self._normalizedValue(this.data.value.value, this.data.min.value, this.data.max.value)|spaceless %}

{% set adjustedValue = min(max(this.data.value.value, this.data.min.value), this.data.max.value) %}

{% set displayedValue = this.data.value_format == 'percent' ? percentComplete ~ "%" : adjustedValue ~ " of " ~ this.data.max.value %}

<bolt-progress-bar
  {% if outer_classes %} class="{{ outer_classes|join(' ') }}" {% endif %}
  {{ this.props|without("class") }}
>
  <div
    role="progressbar"
    class="{{ classes|join(' ') }}"
    aria-valuemin="{{ this.data.min }}"
    aria-valuemax="{{ this.data.max }}"
    aria-valuenow="{{ adjustedValue }}"
    aria-label="{{ displayedValue }}"
  >
    <div class="c-bolt-progress-bar__track">
      <span
        class="{{ fillClasses | join(' ')}}"
        style="transform: translate3d({{ percentComplete }}%, 0, 0) translate3d(-100%, 0, 0);"
      >
      </span>
    </div>
    <div class="c-bolt-progress-bar__value">{{ displayedValue }}</div>
  </div>
</bolt-progress-bar>

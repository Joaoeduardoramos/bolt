//------------------------------------
//    #BOLT TYPEAHEAD COMPONENT
//------------------------------------

@import '@bolt/core/styles/index.scss';

$bolt-typeahead-theme-options-used: (link background text) !global;

// @todo: move to Core
// keeps track of which theme props get used to help with inlining what's needed later on
@function bolt-theme-prop($props...){
  $prop: '';
  @if (length($props) >= 1) {
    $prop: nth($props, 1);
  } @else {
    $prop: $props;
  }

  $bolt-typeahead-theme-options-used: sl-prepend($bolt-typeahead-theme-options-used, $prop) !global;
  @return bolt-theme($props...);
}

// @todo: move to Core
// mixin that outputs a bolt friendly CSS variable in the correct format (ie. opacity friendly!)
@mixin bolt-theme-var($varName, $value){
  @if type-of($value) == color and type-of($value) != string {
    $red: round(red($value));
    $green: round(green($value));
    $blue: round(blue($value));
    --bolt-theme-#{$varName}: #{$red, $green, $blue};
  } @else {
    --bolt-theme-#{$varName}: #{$value};
  }
}

// loop through the available themes and generate a custom subset of theme prop options that were used
// this eliminates the need to inline the entire theming system file with all the vars!
// @todo: move to Core
@mixin bolt-theme-subset($map-of-theme-props-used, $outputBackground: true, $outputColor: true){
  // deduplicate the theme prop options that were used
  $map-of-theme-props-used: sl-remove-duplicates($map-of-theme-props-used);

  @each $themeName, $themeOptions in $bolt-themes {

    $selector: ':host .t-bolt-#{$themeName}';

    #{unquote($selector)} {
      @each $themeOptionName, $themeOptionValue in $themeOptions {
        @each $propName in $map-of-theme-props-used {
          @if $propName == $themeOptionName {
            @include bolt-theme-var($themeOptionName, $themeOptionValue);
          }
        }
      }

      @if ($outputColor){
        color: bolt-theme-prop-value($themeName, text);
        color: rgba(var(--bolt-theme-text), 1);
      }

      @if ($outputBackground){
        background-color: bolt-theme-prop-value($themeName, background);
        background-color: rgba(var(--bolt-theme-background), 1);
      }
    }
  }
}


$bolt-clear-button-size: 1.7rem;
$bolt-clear-button-size-at-med: 1.4rem;
$bolt-typeahead-button-width: bolt-spacing(medium) + .75rem;
$bolt-typeahead-border-width: $bolt-border-width;
$bolt-typeahead-border-style: $bolt-border-style;
$bolt-typeahead-border-radius: 6px;
$bolt-typeahead-placeholder-color: bolt-theme-prop(text-on-background, 0.4);
$bolt-typeahead-result-highlight-color: #F5F5FA;

/**
 * 1. relative z-index so doesn't need to use bolt z-index mixin
 */

bolt-typeahead {
  display: flex;
  align-self: stretch;
  position: relative;
  text-align: start;
}

:host {
  position: relative;
}

bolt-autosuggest {
  width: 100%;
}

.c-bolt-typeahead {
  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;
  border-radius: $bolt-typeahead-border-radius;
}

.c-bolt-typeahead__label {
  position: relative;
}

.c-bolt-typeahead__input {
  box-sizing: border-box; // needed when rendered to the Shadow DOM
  -webkit-appearance: none; // removes default styling (ex. heavy box shadow) in Safari
  width: 100%;
  max-width: 100%;
  @include bolt-padding(medium, squished);
  padding-right: $bolt-typeahead-button-width;
  padding-left: $bolt-typeahead-button-width;
  color: bolt-theme-prop(text-on-background);
  font-size: 16px; // prevent zooming in on mobile
  border-radius: $bolt-typeahead-border-radius;
  border-width: $bolt-typeahead-border-width;
  border-style: $bolt-typeahead-border-style;
  border-color: bolt-theme-prop(link, 0.4);
  background-color: bolt-theme-prop(secondary, 0.1);
  text-overflow: ellipsis;
  transition: all 0.1s ease;
  outline-offset: -3px;
  outline-width: 2px;

  @media all and (min-width: bolt-bp(medium)) {
    padding-right: $bolt-clear-button-size-at-med;
  }

  @include bolt-mq(medium) {
    font-size: inherit;
  }

  &:focus {
    border-color: rgba(84, 93, 166, 0.8);
    border-color: bolt-theme-prop(link, 0.8);
    box-shadow: 0 0 0 2px rgba(var(--bolt-theme-link), 0.5), inset 0 0 0 1px rgba(var(--bolt-theme-link), 1);
    outline: 0;
  }

  &--open {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }

  // Remove the native <input> clear button in IE 11 in lieu of JS-controlled clear button
  &::-ms-clear {
    display: none;
  }

  &::-webkit-input-placeholder,
  &::-moz-input-placeholder {
    transition: all 0.1s ease;
  }

  &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    color: $bolt-typeahead-placeholder-color;
  }

  &::-moz-placeholder { /* Firefox 19+ */
    color: $bolt-typeahead-placeholder-color;
  }

  &:-ms-input-placeholder { /* IE 10+ */
    color: $bolt-typeahead-placeholder-color;
  }

  &:-moz-placeholder { /* Firefox 18- */
    color: $bolt-typeahead-placeholder-color;
  }
}

.c-bolt-typeahead__menu {
  display: block;
  opacity: 0;
  position: absolute;
  top: calc(100% + 2px);
  right: 0;
  z-index: 10; /* [1] */
  width: 100%;
  min-width: 100%;
  max-height: 0;
  overflow: hidden;
  text-transform: capitalize;
  border-bottom-right-radius: $bolt-typeahead-border-radius;
  border-bottom-left-radius: $bolt-typeahead-border-radius;
  box-shadow: rgba(bolt-color(gray, dark), 0.3) 0px 15px 46px -10px;

  transition: max-height 0.3s cubic-bezier(0.645,0.045,0.355,1), opacity 0.3s cubic-bezier(0.645,0.045,0.355,1);
  &.is-open {
  background-color: bolt-theme-prop(background-secondary);

    opacity: 1;
    overflow-y: auto;
    max-height: calc(100vh - #{$bolt-typeahead-button-width});
    max-height: calc(100vh - var(--typeahead-height) );
  }
}

.c-bolt-typeahead__results {
  overflow: hidden;
  margin: 0;
  padding: 0;
  list-style: none;
  border-bottom-right-radius: $bolt-typeahead-border-radius;
  border-bottom-left-radius: $bolt-typeahead-border-radius;
  @include bolt-padding-top(xsmall);
  @include bolt-padding-bottom(xsmall);

  &:empty {
    max-height: 0;
    border-width: 0;
  }
}

.c-bolt-typeahead__result {
  overflow: hidden;
  color: inherit;
  transition: background-color 0.1s ease;

  &.has-cursor {
    background-color: $bolt-typeahead-result-highlight-color;
  }

  &:active,
  &:focus {
    background-color: rgba(bolt-color(indigo, xlight), .5);
  }
}

.c-bolt-typeahead__result-highlight {
  @include bolt-font-weight(bold);
}

.c-bolt-typeahead__result-text {
  @include bolt-padding(medium, squished);
  display: block;
  padding-left: $bolt-typeahead-button-width;
  color: inherit;
  text-transform: initial; // fix for weird capitalization
  cursor: pointer;
  font-size: 0.8rem;
  transition: background 0.1s ease;

  &:hover,
  .has-cursor & {
    background-color: bolt-theme-prop(link, 0.1);
  }

  &:active,
  &:focus {
    background-color: bolt-theme-prop(link, 0.2);
  }
}

.c-bolt-typeahead__wrapper {
  width: 100%;
}

.c-bolt-typeahead__input-wrapper {
  flex-shrink: 0;
  position: relative; // used for positioning search clear button in relation to the <input>
}

.c-bolt-typeahead__button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 1; /* [1] */
  cursor: pointer;
  border: 0;
  transition: opacity 0.1s ease;
}

.c-bolt-typeahead__button--clear {
  visibility: hidden;
  opacity: 0;
  right: 0;
}

.c-bolt-typeahead__button--submit {
  left: 0;
}

.c-bolt-typeahead__icon {
  color: bolt-theme-prop(link);
  line-height: 1;
  font-size: 1.5rem;

  // workaround to ensure nested icons are filled in correctly (esp. in IE 11 or when Shadow DOM isn't used)

  @include bolt-ie11-only {
    .c-bolt-icon__icon [fill]:not([fill="currentColor"]) {
      fill: bolt-theme-prop(background);
    }
  }
}

.c-bolt-typeahead__icon--clear {
  fill: currentColor;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
  z-index: 1; /* [1] */
  width: 1rem; // needed for icon SSR rendering
  font-size: 1rem; // needed for icon SSR rendering
}

.c-bolt-typeahead__input[required]:valid ~ .c-bolt-typeahead__button--clear,
.c-bolt-typeahead__button--clear.is-visible {
  visibility: visible;
  opacity: 1;
}

.c-bolt-typeahead__input--with-clear-button ~ .c-bolt-typeahead__button--submit {
  opacity: 1;
}

@include bolt-theme-subset($bolt-typeahead-theme-options-used);

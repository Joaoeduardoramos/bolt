@import '@bolt/core';
@import '@bolt/global/styles/06-themes/_themes.all.scss';

/* ------------------------------------ *\
   Modal
   ---
   Based originally off of
   https://github.com/edenspiekermann/a11y-dialog
   before heavy modifications
   and customizations
\* ------------------------------------ */

/**
 * When `<dialog>` is properly supported, the overlay is implied and can be
 * styled with `::backdrop`, which means the DOM one should be removed.
 */
/*
[data-a11y-dialog-native] .dialog-overlay {
  @todo: look further into this to see why the natively supported ::backdrop wasn't showing up as expected
  display: none;
}

dialog::backdrop {
  background-color: rgba(0, 0, 0, 0.66);
}
*/

$bolt-modal-overlay-bg-color: rgba(bolt-color(black), bolt-opacity(60));
$bolt-modal-border-width: $bolt-border-width;
$bolt-modal-border-style: $bolt-border-style;
$bolt-modal-border-color: bolt-theme(text, 0.15);
$bolt-modal-border-radius: bolt-border-radius(small);

// Hide all the non-trigger (button / link, etc) content inside the <bolt-modal> container before the JS kicks in
bolt-modal:not([ready]) {
  > *:not([slot*='trigger']) {
    display: none;
  }
}

.c-bolt-modal {
  display: inline;
}

.c-bolt-modal__overlay {
  display: block;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0;
  pointer-events: none;
  background-color: $bolt-modal-overlay-bg-color;
  transition: opacity 0.3s ease;

  &.is-open {
    @include bolt-z-index(modalBG);

    opacity: 1;
  }
}

.c-bolt-modal__content {
  @include bolt-z-index(modal);

  display: block;
  opacity: 0;
  visibility: hidden;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) translateY(100px);
  max-width: calc(100% - #{bolt-spacing(small) * 2});
  max-height: 90vh; // @todo: refactor min / max height and width; placeholder styles for demo
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent;
  transition: 0.3s ease; // @todo: abstract away transition styles

  @include bolt-mq(xsmall) {
    max-width: calc(100% - #{bolt-spacing(medium) * 2});
  }

  &.is-open {
    opacity: 1;
    visibility: visible;
    transform: translate(-50%, -50%);
    transition: 0.3s ease; // @todo: abstract away transition styles
  }
}

.c-bolt-modal__content--width-optimal {
  width: 75ch;
}

.c-bolt-modal__content--width-regular {
  width: 100% / 12 * 10;
}

.c-bolt-modal__content--width-full {
  width: calc(100% - #{bolt-spacing(small) * 2});

  @include bolt-mq(xsmall) {
    width: calc(100% - #{bolt-spacing(medium) * 2});
  }
}

.c-bolt-modal__container {
  display: block;
  border-radius: $bolt-modal-border-radius;
  background-color: bolt-theme(background);
}

.c-bolt-modal__container-header,
.c-bolt-modal__container-footer,
.c-bolt-modal__container-body {
  display: block;
}

.c-bolt-modal__container-body {
  @include bolt-padding(small);

  max-height: calc(90vh - 8rem);
  overflow: auto;

  @include bolt-mq(xsmall) {
    @include bolt-padding(medium);
  }
}

.c-bolt-modal__container-header,
.c-bolt-modal__container-footer {
  @include bolt-padding(small, squished);

  @include bolt-mq(xsmall) {
    @include bolt-padding(medium, squished);
  }
}

.c-bolt-modal__container-header {
  border-bottom: $bolt-modal-border-width $bolt-modal-border-style $bolt-modal-border-color;
}

.c-bolt-modal__container-footer {
  border-top: $bolt-modal-border-width $bolt-modal-border-style $bolt-modal-border-color;
}

.c-bolt-modal__close-button {
  position: absolute;
  top: 0;
  right: 0;
  transform: translate3d(50%, -50%, 0);
}

.c-bolt-modal__dialog-title {
  @include bolt-visuallyhidden;
}

/* ------------------------------------ *\
   Spacing System (CSS Custom Props)
\* ------------------------------------ */

/**
 * Base value map
 * x: horizontal
 * y: vertical
 *
 * Base values are kept unitless to allow pure math in edge cases. For example, using `em` instead of `rem`:
 * calc(var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-medium) * 1em)
 */
$bolt-spacing-system: (
  'x': 1.55,
  'y': 1.35,
) !default;

/**
 * Base multiplier map
 */
$bolt-spacing-multiplier-system: (
  'xxlarge': 8,
  'xlarge': 4,
  'large': 2,
  'medium': 1,
  'small': 0.5,
  'xsmall': 0.25,
  'xxsmall': 0.125,
) !default;

/**
 * Spacing token maps
 *
 * Token values are kept as formulas so they can be updated by changing base values and multipliers alone.
 */
$bolt-spacing-x-system: (
  'xxlarge':
    calc(var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-xxlarge) * 1rem),
  'xlarge':
    calc(var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-xlarge) * 1rem),
  'large':
    calc(var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-large) * 1rem),
  'medium':
    calc(var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-medium) * 1rem),
  'small':
    calc(var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-small) * 1rem),
  'xsmall':
    calc(var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-xsmall) * 1rem),
  'xxsmall':
    calc(var(--bolt-spacing-x) * var(--bolt-spacing-multiplier-xxsmall) * 1rem),
) !default;

$bolt-spacing-y-system: (
  'xxlarge':
    calc(var(--bolt-spacing-y) * var(--bolt-spacing-multiplier-xxlarge) * 1rem),
  'xlarge':
    calc(var(--bolt-spacing-y) * var(--bolt-spacing-multiplier-xlarge) * 1rem),
  'large':
    calc(var(--bolt-spacing-y) * var(--bolt-spacing-multiplier-large) * 1rem),
  'medium':
    calc(var(--bolt-spacing-y) * var(--bolt-spacing-multiplier-medium) * 1rem),
  'small':
    calc(var(--bolt-spacing-y) * var(--bolt-spacing-multiplier-small) * 1rem),
  'xsmall':
    calc(var(--bolt-spacing-y) * var(--bolt-spacing-multiplier-xsmall) * 1rem),
  'xxsmall':
    calc(var(--bolt-spacing-y) * var(--bolt-spacing-multiplier-xxsmall) * 1rem),
) !default;

/**
 * Generate global spacing variables
 */
:root {
  // Base tokens are for public use and user overrides
  @each $size in $bolt-spacing-system {
    $size-dir: nth($size, 1);
    $size-value: nth($size, 2);

    --bolt-spacing-#{$size-dir}: #{$size-value};
  }
  @each $size in $bolt-spacing-multiplier-system {
    $size-name: nth($size, 1);
    $size-value: nth($size, 2);

    --bolt-spacing-multiplier-#{$size-name}: #{$size-value};
  }

  // Spacing tokens are for public use
  // Note: while user overrides are possible but they are not encouraged. Customization should done through base tokens.
  @each $size in $bolt-spacing-x-system {
    $size-name: nth($size, 1);
    $size-value: nth($size, 2);

    --bolt-spacing-x-#{$size-name}: #{$size-value};
  }
  @each $size in $bolt-spacing-y-system {
    $size-name: nth($size, 1);
    $size-value: nth($size, 2);

    --bolt-spacing-y-#{$size-name}: #{$size-value};
  }
}

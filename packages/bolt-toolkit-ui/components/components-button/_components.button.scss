/* ------------------------------------ *\
   Buttons
\* ------------------------------------ */
@import '@bolt/settings-global';
@import '@bolt/tools-button-color';
@import '@bolt/tools-font-size';
@import '@bolt/tools-font-weight';
@import '@bolt/tools-spacing';
@import '@bolt/tools-no-select';

$bolt-color-button-text: bolt-palette(white);
$bolt-color-primary: bolt-palette(blue);
$bolt-color-secondary: bolt-palette(blue);

$bolt-color--shadow: bolt-palette(black);

$bolt-shadow: 0 .04rem .15rem rgba($bolt-color--shadow, .5);
$bolt-shadow--raised:
  $bolt-shadow,
  0 .35rem .6rem rgba($bolt-color--shadow, .18);

$bolt-transition: ease-in-out 200ms;
$bolt-border-radius: 3px;
$bolt-border-width--button: 1px;

@mixin bolt-reset-button-styles {
  @include bolt-padding(0);
  @include bolt-font-family(body);

  border: none;
  background: none;
}

// Placeholder for colors.
@mixin bolt-link-color {
  &:link {
    color: var(--bolt-color-secondary, $bolt-color-secondary);
  }

  &:visited {
    color: var(--bolt-color-secondary, inherit);
  }

  &:hover {
    color: var(--bolt-color-secondary, mix(white, $bolt-color-secondary, 35%));
  }

  &:active {
    color: var(--bolt-color-secondary, $bolt-color-secondary);
  }
}

@mixin bolt-button-color($hiarchy) {
  @if $hiarchy == 'primary' {
    &,
    &:visited {
      color:            var(--bolt-color-button-text, $bolt-color-button-text);
      border-color:     var(--bolt-color-primary, $bolt-color-primary);
      background-color: var(--bolt-color-primary, $bolt-color-primary);
      box-shadow:       $bolt-shadow;
    }

    &:hover {
      border-color:     var(--bolt-color-primary, mix(white, $bolt-color-primary, 15%));
      background-color: var(--bolt-color-primary, mix(white, $bolt-color-primary, 15%));
      box-shadow:       $bolt-shadow--raised;
    }

    &:active {
      border-color:     var(--bolt-color-primary, mix(black, $bolt-color-primary, 25%));
      background-color: var(--bolt-color-primary, mix(black, $bolt-color-primary, 25%));
    }

    &:focus {
      box-shadow:       $bolt-shadow;
    }

    &:focus:hover {
      box-shadow:       $bolt-shadow--raised;
    }
  }

  @elseif $hiarchy == 'secondary' {
    &,
    &:visited {
      color:            var(--bolt-color-primary, $bolt-color-primary);
      border-color:     var(--bolt-color-button-text, $bolt-color-button-text);
      background-color: var(--bolt-color-button-text, $bolt-color-button-text);
      box-shadow:       $bolt-shadow;
    }

    &:hover {
      border-color:     var(--bolt-color-button-text, mix(black, $bolt-color-button-text, 2%));
      background-color: var(--bolt-color-button-text, mix(black, $bolt-color-button-text, 2%));
      box-shadow:       $bolt-shadow--raised;
    }

    &:active {
      border-color:     var(--bolt-color-button-text, mix(black, $bolt-color-button-text, 15%));
      background-color: var(--bolt-color-button-text, mix(black, $bolt-color-button-text, 15%));
    }

    &:focus {
      box-shadow:       $bolt-shadow;
    }

    &:focus:hover {
      box-shadow:       $bolt-shadow--raised;
    }
  }

  @elseif $hiarchy == 'tertiary' {
    &,
    &:visited {
      color:            var(--bolt-color-secondary, $bolt-color-secondary);
      border-color:     transparent;
      background-color: transparent;
      box-shadow:       none;
    }

    &:hover {
      border-color:     transparent;
      background-color: transparent;
      box-shadow:       none;
    }

    &:active {
      border-color:     transparent;
      background-color: transparent;
    }

    &:focus {
      box-shadow:       none;
    }

    &:focus:hover {
      box-shadow:       none;
    }
  }

  @elseif $hiarchy == 'success' {
    &,
    &:visited {
      color:            bolt-palette(white);
      border-color:     bolt-palette(success);
      background-color: bolt-palette(success);
      box-shadow:       $bolt-shadow;
    }

    &:hover {
      border-color:     bolt-palette(success, dark);
      background-color: bolt-palette(success, dark);
      box-shadow:       $bolt-shadow;
    }

    &:active {
      border-color:     bolt-palette(success, dark);
      background-color: bolt-palette(success, dark);
    }

    &:focus {
      box-shadow:       $bolt-shadow;
    }

    &:focus:hover {
      box-shadow:       $bolt-shadow;
    }
  }

  @elseif $hiarchy == 'warning' {
    &,
    &:visited {
      color:            bolt-palette(black);
      border-color:     bolt-palette(warning);
      background-color: bolt-palette(warning);
      box-shadow:       $bolt-shadow;
    }

    &:hover {
      border-color:     bolt-palette(warning, dark);
      background-color: bolt-palette(warning, dark);
      box-shadow:       $bolt-shadow;
    }

    &:active {
      border-color:     bolt-palette(warning, dark);
      background-color: bolt-palette(warning, dark);
    }

    &:focus {
      box-shadow:       $bolt-shadow;
    }

    &:focus:hover {
      box-shadow:       $bolt-shadow;
    }
  }

  @elseif $hiarchy == 'error' {
    &,
    &:visited {
      color:            bolt-palette(white);
      border-color:     bolt-palette(error);
      background-color: bolt-palette(error);
      box-shadow:       $bolt-shadow;
    }

    &:hover {
      border-color:     bolt-palette(error, dark);
      background-color: bolt-palette(error, dark);
      box-shadow:       $bolt-shadow;
    }

    &:active {
      border-color:     bolt-palette(error, dark);
      background-color: bolt-palette(error, dark);
    }

    &:focus {
      box-shadow:       $bolt-shadow;
    }

    &:focus:hover {
      box-shadow:       $bolt-shadow;
    }
  }

  @elseif $hiarchy == 'disabled' {
    &,
    &:visited {
      color:            bolt-palette(gray);
      border-color:     bolt-palette(gray, light);
      background-color: bolt-palette(gray, light);
      box-shadow:       $bolt-shadow;
    }

    &:hover {
      border-color:     bolt-palette(gray, light);
      background-color: bolt-palette(gray, light);
      box-shadow:       $bolt-shadow;
    }

    &:active {
      border-color:     bolt-palette(gray, light);
      background-color: bolt-palette(gray, light);
    }

    &:focus {
      box-shadow:       $bolt-shadow;
    }

    &:focus:hover {
      box-shadow:       $bolt-shadow;
    }
  }
}

@mixin bolt-button {
  @include bolt-reset-button-styles;
  @include bolt-no-select();
  @include bolt-font-weight(semibold);

  display: inline-block;
  @supports (display: flex) {
    display: inline-flex;
    justify-content: center;
  }

  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  border-style: solid;
  border-width: $bolt-border-width--button;
  border-radius: $bolt-border-radius;
  transition: all $bolt-transition;

  &:hover {
    transform: translate3d(0, -1px, 0);
  }

  &:active {
    transform: translate3d(0, 0, 0);
  }

  > * {
    display: inline-flex;
    align-self: center;
  }
}


// Button colors

.c-test-button {
  @include bolt-button();
}

.c-test-button,
.c-test-button--primary {
  @include bolt-button-color(primary);
}

.c-test-button--secondary {
  @include bolt-button-color(secondary);
}

.c-test-button--tertiary {
  @include bolt-button-color(tertiary);
}

.c-test-button--success {
  @include bolt-button-color(success);
}

.c-test-button--warning {
  @include bolt-button-color(warning);
}

.c-test-button--error {
  @include bolt-button-color(error);
}

.c-test-button--disabled {
  @include bolt-button-color(disabled);

  cursor: not-allowed;
}


// Button sizes

.c-test-button,
.c-test-button--medium {
  @include bolt-padding(medium, squished);
  @include bolt-font-size(xsmall);
}

.c-test-button--xsmall {
  @include bolt-padding(xsmall, squished);
  @include bolt-font-size(xsmall);
}

.c-test-button--small {
  @include bolt-padding(small, squished);
  @include bolt-font-size(xsmall);
}

.c-test-button--large {
  @include bolt-padding(medium, squished);
  @include bolt-font-size(medium);
}

.c-test-button--xlarge {
  @include bolt-padding(large, squished);
  @include bolt-font-size(large);
}


// Button widths

@mixin bolt-button--stacked {
  width: 100%;

  &:not(:last-child) {
    @include bolt-margin-bottom(xsmall);
  }
}

.c-test-button--stacked {
  @include bolt-button--stacked;
}

.c-test-button--stacked\@bp-xsmall {
  @media screen and (max-width: map-get($bolt-breakpoints, xsmall)) {
    @include bolt-button--stacked;
  }
}


// Button content

.c-test-button__text {
  & + .c-test-button__icon {
    @include bolt-margin-left(xsmall);
  }
}

.c-test-button__icon {
  width: 1em;
  height: 1em;

  svg {
    width: 1em;
    height: auto;
    fill: currentColor;
  }

  & + .c-test-button__text {
    @include bolt-margin-left(xsmall);
  }
}


// Button group

.c-test-button-group {
  display: flex;

  > * + * {
    @include bolt-margin-left(xsmall);
  }
}

.c-test-button-group--even {
  > * {
    flex: 1;
  }
}

.c-test-button-group--stacked {
  flex-wrap: wrap;

  > * {
    @include bolt-margin-left(0);
    @include bolt-button--stacked;
  }
}

.c-test-button-group--stacked\@bp-xsmall {
  @media screen and (max-width: map-get($bolt-breakpoints, xsmall)) {
    flex-wrap: wrap;

    > * {
      @include bolt-margin-left(0);
      @include bolt-button--stacked;

      flex: none;
    }
  }
}


// Links

.c-test-link {
  @include bolt-reset-button-styles;
  @include bolt-link-color;

  text-decoration: underline;
  transition: all $bolt-transition;
}

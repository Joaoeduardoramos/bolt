/* ------------------------------------ *\
  Settings
\* ------------------------------------ */
@import '@bolt/settings-all';


/* ------------------------------------ *\
  Tools
\* ------------------------------------ */
@import '@bolt/tools-all';


/* ------------------------------------ *\
  Generic
\* ------------------------------------ */
@import '@bolt/generic-all';


/* ------------------------------------ *\
  Elements
\* ------------------------------------ */
@import '@bolt/elements-all';


/* ------------------------------------ *\
  Objects
\* ------------------------------------ */
@import '@bolt/objects-all';


/* ------------------------------------ *\
  Components
\* ------------------------------------ */
@import '@bolt/components-all';
// @import '@bolt/components-page-intro';
// @import '@bolt/components-sg-article';
// @import '@bolt/components-sg-navigation';
// @import '../06-components/components.article.refactor';



/* ------------------------------------ *\
  Themes
\* ------------------------------------ */
@import '@bolt/themes-all';


/* ------------------------------------ *\
  Utilities
\* ------------------------------------ */
@import '@bolt/utilities-all';



/* ------------------------------------ *\
   Theme testing
\* ------------------------------------ */

@mixin test-color($name, $tone: 'initial', $type: null) {
  $color: map-get-deep($bolt-colors, $name, $tone);
  color: $color;
  @if $type == null {
    color: var(--bolt-color-text, $color);
  }
  @else {
    color: var(--bolt-color-#{$type}, $color);
  }
}

@mixin test-background-color($name, $tone: 'initial', $type: null) {
  $background-color: map-get-deep($bolt-colors, $name, $tone);
  background-color: $background-color;
  @if $type == null {
    background-color: var(--bolt-color-background, $background-color);
  }
  @else {
    background-color: var(--bolt-color-#{$type}, $background-color);
  }
}

@mixin test-border-color($name, $tone: 'initial', $type: null) {
  $border-color: map-get-deep($bolt-colors, $name, $tone);
  border-color: $border-color;
  @if $type == null {
    border-color: var(--bolt-color-border, $border-color);
  }
  @else {
    border-color: var(--bolt-color-#{$type}, $border-color);
  }
}

@mixin _test-theme-settings(
  $background,          // Background
  $primary,             // Button background
  $secondary,           // Link
  $text: null,          // Text - Defaults to bolt-text-contrast($background) if not defined
  $heading: null,       // Heading - Defaults to $text if not defined
  $button-text: null,   // Button text - Defaults to bolt-text-contrast($primary) if not defined
  $border: null         // Border - Defaults to $text if not defined
  ) {
  --bolt-color-background: $background;
  --bolt-color-primary: $primary;
  --bolt-color-secondary: $secondary;
  @if $text == null {
    --bolt-color-text: bolt-text-contrast($background);
  }
  @else {
    --bolt-color-text: $text;
  }
  @if $heading == null {
    --bolt-color-heading: bolt-text-contrast($background);
  }
  @else {
    --bolt-color-heading: $heading;
  }
  @if $button-text == null {
    --bolt-color-button-text: bolt-text-contrast($primary);
  }
  @else {
    --bolt-color-button-text: $button-text;
  }
  @if $border == null {
    --bolt-color-border: bolt-text-contrast($background);
  }
  @else {
    --bolt-color-border: $border;
  }
}

@mixin test-theme($name: 'xlight') {
  @if $name == 'xlight' {
    @include _test-theme-settings(
      bolt-palette(white),
      bolt-palette(blue),
      bolt-palette(blue),
      null,
      bolt-palette(indigo),
      null,
      null);
  }
  @elseif $name == 'light' {
    @include _test-theme-settings(
      bolt-palette(gray, xlight),
      bolt-palette(blue),
      bolt-palette(blue),
      null,
      bolt-palette(indigo),
      null,
      null);
  }
  @elseif $name == 'dark' {
    @include _test-theme-settings(
      bolt-palette(indigo, light),
      bolt-palette(yellow),
      bolt-palette(yellow),
      null,
      null,
      null,
      null);
  }
  @elseif $name == 'xdark' {
    @include _test-theme-settings(
      bolt-palette(indigo),
      bolt-palette(blue),
      bolt-palette(white),
      null,
      null,
      null,
      null);
  }
  @elseif $name == 'notification' {
    @include _test-theme-settings(
      bolt-palette(blue, light),
      bolt-palette(blue, dark),
      bolt-palette(blue));
  }
  @elseif $name == 'success' {
    @include _test-theme-settings(
      bolt-palette(success, light),
      bolt-palette(success, dark),
      bolt-palette(success));
  }
  @elseif $name == 'warning' {
    @include _test-theme-settings(
      bolt-palette(warning, light),
      bolt-palette(warning, dark),
      bolt-palette(warning));
  }
  @elseif $name == 'error' {
    @include _test-theme-settings(
      bolt-palette(error, light),
      bolt-palette(error, dark),
      bolt-palette(warning, dark),
      null,
      bolt-palette(warning, dark),
      null,
      bolt-palette(error));
  }
}

.t-test-xlight {
  @include bolt-padding(medium);
  @include test-theme(xlight);
}

.t-test-light {
  @include bolt-padding(medium);
  @include test-theme(light);
}

.t-test-dark {
  @include bolt-padding(medium);
  @include test-theme(dark);
}

.t-test-xdark {
  @include bolt-padding(medium);
  @include test-theme(xdark);
}

.t-test-success {
  @include bolt-padding(medium);
  @include test-theme(success);
}

.t-test-warning {
  @include bolt-padding(medium);
  @include test-theme(warning);
}

.t-test-error {
  @include bolt-padding(medium);
  @include test-theme(error);
}

.t-test-notification {
  @include bolt-padding(medium, squished);
  @include test-theme(notification);
}


/* ------------------------------------ *\
   Pattern Lab Styleguidekit Style
   Overrides -- @TODO: Move to
   external PL-specific Sass file
\* ------------------------------------ */
.sg-main {
  @include bolt-padding(medium);
}

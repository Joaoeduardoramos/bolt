/* ------------------------------------ *\
  SETTINGS - BREAKPOINTS
\* ------------------------------------ */
// @import 'breakpoint-slicer/stylesheets/breakpoint-slicer';


$breakpoints: (
  xsmall:  400px,
  small:   600px,
  medium:  800px,
  large:   1200px,
  xlarge:  1400px
);

// @each $breakpoint in $breakpoints {
//   $name:     nth($breakpoint, 1);
//   $value:    nth($breakpoint, 2);
//   // @include add-breakpoint(quote($name), $value);
//
//   // $slicer-breakpoint-names: append($slicer-breakpoint-names, $name);
//   // $slicer-breakpoints:      append($slicer-breakpoints, $value);
// }




@import 'mappy-breakpoints/mappy-breakpoints';

/**
  * Very lightweight wrapper over https://github.com/zellwk/mappy-breakpoints
  *
  * 1. Override the default `mappy-em` internal function to allow us to output px-based
  *    breakpoints instead of rems
  * 2. Lightweight alias over the mappy-bp mixin. Allows existing `@include respond-to`
  *    and `@include breakpoint` calls to continue to work as expected
  */
$mappy-output: 'px' !default;


@function mappy-em($target, $context: 16px) {
  @if $target == 0 {
    @return 0;
  }

  @if ($mappy-output == 'px') { /* [1] */
    @return $target;
  } @else {
    @return $target / $context * 1em;
  }
}


@mixin breakpoint($args...) { /* [2] */
  @error "The `@include breakpoint` is being phased out. Please use the `@include respond-to()` mixin instead.";
  @include mappy-bp($args...) {
    @content;
  }
}

@mixin respond-to($args...) { /* [2] */
  @include mappy-bp($args...) {
    @content;
  }
}


h2 {
  @include breakpoint(medium){
    background-color: red;
  }
}

/*------------------------------------*\
  Spacing Scale
\*------------------------------------*/

$spacing-leading: 1.65;
$spacing-gutter: 2;




$spacing-sizes--vertical: (
  xxlarge:  $spacing-leading * 8 + rem,
  xlarge:   $spacing-leading * 4 + rem,
  large:    $spacing-leading * 2 + rem,
  medium:   $spacing-leading * 1 + rem,
  small:    $spacing-leading * 0.5 + rem,
  xsmall:   $spacing-leading * 0.25 + rem,
  xxsmall:  $spacing-leading * 0.125 + rem,
  xxxsmall: $spacing-leading * 0.0625 + rem,
  none:     0
) !default;

@function spacing-vertical($size) {
  @return map-get-deep($spacing-sizes--vertical, $size);
}

$spacing-sizes--horizontal: (
  xxlarge:  $spacing-gutter * 8 + rem,
  xlarge:   $spacing-gutter * 4 + rem,
  large:    $spacing-gutter * 2 + rem,
  medium:   $spacing-gutter * 1 + rem,
  small:    $spacing-gutter * 0.5 + rem,
  xsmall:   $spacing-gutter * 0.25 + rem,
  xxsmall:  $spacing-gutter * 0.125 + rem,
  xxxsmall: $spacing-gutter * 0.0625 + rem,
  none:     0
) !default;

@function spacing-horizontal($size) {
  @return map-get-deep($spacing-sizes--horizontal, $size);
}




$spacing-scales: (
  spacing-scales: (
    xxlarge: (
      vertical:   $spacing-leading * 8 + rem,
      horizontal: $spacing-gutter * 8 + rem,
    ),
    xlarge: (
      vertical:   $spacing-leading * 4 + rem,
      horizontal: $spacing-gutter * 4 + rem,
    ),
    large: (
      vertical:   $spacing-leading * 2 + rem,
      horizontal: $spacing-gutter * 2 + rem,
    ),
    medium: (
      vertical:   $spacing-leading * 1 + rem,
      horizontal: $spacing-gutter * 1 + rem,
    ),
    small: (
      vertical:   $spacing-leading * 0.5 + rem,
      horizontal: $spacing-gutter * 0.5 + rem,
    ),
    xsmall: (
      vertical:   $spacing-leading * 0.25 + rem,
      horizontal: $spacing-gutter * 0.25 + rem,
    ),
    xxsmall: (
      vertical:   $spacing-leading * 0.125 + rem,
      horizontal: $spacing-gutter * 0.125 + rem,
    ),
    none: (
      vertical:   0,
      horizontal: 0
    ),
    auto: (
      vertical:   auto,
      horizontal: auto
    )
  )
);

@mixin margin($size: medium, $sides: all, $reset: null) {
  $size-vertical:   map-get-deep($spacing-scales, 'spacing-scales', $size, 'vertical');
  $size-horizontal: map-get-deep($spacing-scales, 'spacing-scales', $size, 'horizontal');
  $size-type:       type-of($size);

  @if $size-type == number {
    $size-vertical:   $size;
    $size-horizontal: $size;
  }

  @if $sides == 'all' {
    margin-top:    $size-vertical;
    margin-right:  $size-horizontal;
    margin-bottom: $size-vertical;
    margin-left:   $size-horizontal;
  }

  @else if $sides == 'top' {
    margin-top:    $size-vertical;

    @if $reset == 'reset' {
      margin-right:  0;
      margin-bottom: 0;
      margin-left:   0;
    }
  }

  @else if $sides == 'right' {
    margin-right:  $size-horizontal;

    @if $reset == 'reset' {
      margin-top:    0;
      margin-bottom: 0;
      margin-left:   0;
    }
  }

  @else if $sides == 'bottom' {
    margin-bottom: $size-vertical;

    @if $reset == 'reset' {
      margin-top:    0;
      margin-right:  0;
      margin-left:   0;
    }
  }

  @else if $sides == 'left' {
    margin-left:   $size-horizontal;

    @if $reset == 'reset' {
      margin-top:    0;
      margin-right:  0;
      margin-bottom: 0;
    }
  }

  @else if $sides == 'horizontal' {
    margin-right:  $size-horizontal;
    margin-left:   $size-horizontal;

    @if $reset == 'reset' {
      margin-top:    0;
      margin-bottom: 0;
    }
  }

  @else if $sides == 'vertical' {
    margin-top:    $size-vertical;
    margin-bottom: $size-vertical;

    @if $reset == 'reset' {
      margin-right:  0;
      margin-left:   0;
    }
  }
}

@mixin padding($size: medium, $sides: all, $reset: null) {
  $size-vertical:   map-get-deep($spacing-scales, 'spacing-scales', $size, 'vertical');
  $size-horizontal: map-get-deep($spacing-scales, 'spacing-scales', $size, 'horizontal');
  $size-type:       type-of($size);

  @if $size-type == number {
    $size-vertical:   $size;
    $size-horizontal: $size;
  }

  @if $sides == 'all' {
    padding-top:    $size-vertical;
    padding-right:  $size-horizontal;
    padding-bottom: $size-vertical;
    padding-left:   $size-horizontal;
  }

  @else if $sides == 'squish' {
    padding-top:    $size-vertical;
    padding-right:  calc(#{$size-horizontal} * 2);
    padding-bottom: $size-vertical;
    padding-left:   calc(#{$size-horizontal} * 2);
  }

  @else if $sides == 'stretch' {
    padding-top:    $size-vertical;
    padding-right:  calc(#{$size-horizontal} * 0.5);
    padding-bottom: $size-vertical;
    padding-left:   calc(#{$size-horizontal} * 0.5);
  }

  @else if $sides == 'top' {
    padding-top:    $size-vertical;

    @if $reset == 'reset' {
      padding-right:  0;
      padding-bottom: 0;
      padding-left:   0;
    }
  }

  @else if $sides == 'right' {
    padding-right:  $size-horizontal;

    @if $reset == 'reset' {
      padding-top:    0;
      padding-bottom: 0;
      padding-left:   0;
    }
  }

  @else if $sides == 'bottom' {
    padding-bottom: $size-vertical;

    @if $reset == 'reset' {
      padding-top:    0;
      padding-right:  0;
      padding-left:   0;
    }
  }

  @else if $sides == 'left' {
    padding-left:   $size-horizontal;

    @if $reset == 'reset' {
      padding-top:    0;
      padding-right:  0;
      padding-bottom: 0;
    }
  }

  @else if $sides == 'horizontal' {
    padding-right:  $size-horizontal;
    padding-left:   $size-horizontal;

    @if $reset == 'reset' {
      padding-top:    0;
      padding-bottom: 0;
    }
  }

  @else if $sides == 'vertical' {
    padding-top:    $size-vertical;
    padding-bottom: $size-vertical;

    @if $reset == 'reset' {
      padding-right:  0;
      padding-left:   0;
    }
  }
}

@mixin squish($size: medium) {
  $size-vertical:   map-get-deep($spacing-scales, 'spacing-scales', $size, 'vertical');
  $size-horizontal: map-get-deep($spacing-scales, 'spacing-scales', $size, 'horizontal');

  padding-top:    $size-vertical;
  padding-right:  calc(#{$size-horizontal} * 2);
  padding-bottom: $size-vertical;
  padding-left:   calc(#{$size-horizontal} * 2);
}

@mixin stretch($size: medium) {
  $size-vertical:   map-get-deep($spacing-scales, 'spacing-scales', $size, 'vertical');
  $size-horizontal: map-get-deep($spacing-scales, 'spacing-scales', $size, 'horizontal');

  padding-top:    $size-vertical;
  padding-right:  calc(#{$size-horizontal} * 0.5);
  padding-bottom: $size-vertical;
  padding-left:   calc(#{$size-horizontal} * 0.5);
}



$spacing-stacks: (
  spacing-stacks: (
    xxlarge:  $spacing-leading * 4 + rem,
    xlarge:   $spacing-leading * 2 + rem,
    large:    $spacing-leading * 1 + rem,
    medium:   $spacing-leading * 0.5 + rem,
    small:    $spacing-leading * 0.25 + rem,
    xsmall:   $spacing-leading * 0.125 + rem,
    xxsmall:  $spacing-leading * 0.0625 + rem
  )
);

@mixin stack($stack) {
  $margin-size: map-get-deep($spacing-stacks, 'spacing-stacks', $stack);

  margin-bottom: $margin-size;
}




$spacing-inlines: (
  spacing-inlines: (
    xxlarge:  $spacing-gutter * 4 + rem,
    xlarge:   $spacing-gutter * 2 + rem,
    large:    $spacing-gutter * 1 + rem,
    medium:   $spacing-gutter * 0.5 + rem,
    small:    $spacing-gutter * 0.25 + rem,
    xsmall:   $spacing-gutter * 0.125 + rem,
    xxsmall:  $spacing-gutter * 0.0625 + rem
  )
);

@mixin inline($inline) {
  $margin-size: map-get-deep($spacing-inlines, 'spacing-inlines', $inline);

  margin-right: $margin-size;
}

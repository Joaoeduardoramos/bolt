sudo: false
dist: trusty
language: php
php:
  - 7.1

git:
  depth: 3

before_install:
  - openssl aes-256-cbc -K $encrypted_4537e53f71e7_key -iv $encrypted_4537e53f71e7_iv -in scripts/bolt-design-system-bot.private-key.pem.enc -out scripts/bolt-design-system-bot.private-key.pem -d
  - nvm install # version lifted from `.nvmrc`
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.9.4
  - export PATH="$HOME/.yarn/bin:$PATH"

services:
  - docker

# see more conditions: https://docs.travis-ci.com/user/conditions-v1
# Stages run sequentially; the jobs in them run in parallel
stages:
  - Smoke Tests, Build, & Deploy
  - Post-deploy Tests
#  Just an example of having a whole stage be branch conditional; see more conditions: https://docs.travis-ci.com/user/conditions-v1
#  - name: Super Hard Tests
#    if: branch = master

jobs:
  include:
    - stage: Smoke Tests, Build, & Deploy
      name: 'Code Quality'
      before_script:
        # - phpenv config-rm xdebug.ini
        - yarn run setup:quick
      script:
        - ./scripts/check-run-queue.js 'Lint'
        - npm run lint
      after_success:
        - ./scripts/check-run-success.js 'Lint'
      after_failure:
         - ./scripts/check-run-failure.js 'Lint'
      cache:
        yarn: true
        npm: true

    - stage: Smoke Tests, Build, & Deploy
      name: 'Unit Tests'
      before_script:
        - yarn run setup:quick
        - yarn run setup:php
      script:
        - ./scripts/check-run-queue.js 'Unit'
        - npm run test
      after_success:
        - ./scripts/check-run-success.js 'Unit'
      after_failure:
         - ./scripts/check-run-failure.js 'Unit'
      cache:
        yarn: true
        npm: true
        directories:
          - $HOME/.composer/cache/files
          - $HOME/travis/build/bolt-design-system/bolt/node_modules
          - $HOME/travis/build/bolt-design-system/bolt/docs-site/vendor

    - stage: Smoke Tests, Build, & Deploy
      name: 'Build + Deploy'
      before_script:
        # Clear incache file on normal Travis builds
        - find . -name '.incache' -exec rm -rf {} +
        - yarn run setup
      script:
        - yarn run build && yarn run deploy
      after_success:
        # need to reset git repo before `update-read-only-git-repos.sh`
        - cd "`git rev-parse --show-toplevel`" && git clean -fd && git reset --hard HEAD && cd -
        - ./scripts/release/update-read-only-git-repos.sh
      cache:
        yarn: true
        npm: true
        directories:
          - $HOME/.composer/cache/files
          - $HOME/travis/build/bolt-design-system/bolt/node_modules
          - $HOME/travis/build/bolt-design-system/bolt/docs-site/vendor
          - $HOME/travis/build/bolt-design-system/bolt/docs-site/www

    - stage: Post-deploy Tests
      name: 'Nightwatch End-to-End'
      before_script:
        - yarn run setup:quick
      script:
        - ./scripts/check-run-in-progress.js 'Nightwatch'
        - export NOW_URL=$(./scripts/get-latest-deploy.js)
        - echo "The Now URL is $NOW_URL"
        - time curl -sSf "$NOW_URL" > /dev/null # warming up site
        - yarn run test:e2e:full
        - sleep 60
        - ./scripts/report-nightwatch-results.js
      after_success:
        - ./scripts/deploy-branch-alias.js
        - ./scripts/deploy-tagged-release.js
      cache:
        yarn: true
        npm: true
        directories:
          - $HOME/.composer/cache/files
          - $HOME/travis/build/bolt-design-system/bolt/node_modules
          - $HOME/travis/build/bolt-design-system/bolt/docs-site/vendor
          - $HOME/travis/build/bolt-design-system/bolt/docs-site/www

    - stage: Post-deploy Tests
      name: 'Ensure site is live'
      before_script:
        - yarn run setup:quick
      script:
        - ./scripts/check-run-in-progress.js 'Site is live'
        - export NOW_URL=$(./scripts/get-latest-deploy.js)
        - echo "Testing Now URL \"$NOW_URL\" to see if it is alive."
        - time curl -sSf "$NOW_URL" > /dev/null
      after_success:
        - ./scripts/check-run-success.js 'Site is live'
      after_failure:
        - ./scripts/check-run-failure.js 'Site is live'
      cache:
        yarn: true
        npm: true
        directories:
          - $HOME/.composer/cache/files

    - stage: Post-deploy Tests
      name: 'Example master only job'
      if: branch = master
      script:
        - echo "This example only runs on master branch builds"

notifications:
  email:
    on_success: never
    on_failure: never # @todo re-enable
  slack:
    secure: cNto+gWAoK1JM9jBNG4i4rMSybv3twMbqlFSCohQFBDMwKFMdlyWqFDX6iYKtHxWEDzrZyRz3qiJ8/S44mgjeKJ/xHbHDtPchp/KL2P1htipvwD2EZXobcBEGl83v2rmtFO1WNJUPB3RIJE2yt1wJsX7NIXpDw82hePmaIvNJmtbLpK/J5uaFqGNHIsctmULgVmGSNSTyK4nYxxjNNLd0EvO37Y6VN8FhsKNu2NHMKeeQxinEvETDUh8XuqXZYNWE3PBvVa4OiDhgnr5K27jsnWX+wEmqg0xY+CMf7mUSTqVN61fA7LnHyM0qcGGmB6YTv4QYLMwPydp+nsjDcm3St9D+KOTsQ4ExOaEAL/6EnAEpl8GtxST+ytdqswhCC4yMCO61Hy+M5AoXgDSGrrXHgZakDMAcEVcJdH38791hRxcuM3ldVmHAlAWFdgRLG5rRMVh3qoXz7jbraoTdjyKMegQIQdKR2SX7O9Dv0EEtLz4lTFN2RENvAjLggUPPU+ESoUHmSbwmPGnt7jy3ra2AI3nnYpfn/0e6Op/A3z7HLbdm3XyuNWoTPhy1mc4Adca+HosJ37UPv7nDRIGds1sKYAeWq94+rEk+/6IQ/oRIDRhSYsQbLLWnU6DH4o7iOj7D+X/ngjqmF75nW2s5+7rtdBHFvNzOJalCKHiDTMfdlQ=

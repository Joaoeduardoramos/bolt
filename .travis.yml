dist: bionic
language: php
php:
  - 7.1

addons:
  chrome: stable

before_install:
  - openssl aes-256-cbc -K $encrypted_4537e53f71e7_key -iv $encrypted_4537e53f71e7_iv -in scripts/bolt-design-system-bot.private-key.pem.enc -out scripts/bolt-design-system-bot.private-key.pem -d
  - nvm install # version lifted from `.nvmrc`
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.17.3
  - export PATH="$HOME/.yarn/bin:$PATH"

# see more conditions: https://docs.travis-ci.com/user/conditions-v1
# Stages run sequentially; the jobs in them run in parallel
stages:
  - Pre-deploy
  - Post-deploy
#  Just an example of having a whole stage be branch conditional; see more conditions: https://docs.travis-ci.com/user/conditions-v1
#  - name: Super Hard Tests
#    if: branch = master

jobs:
  include:
    - stage: Pre-deploy
      name: 'Smoke Tests: Lint + Jest Tests'
      install:
        - yarn run setup
        - yarn workspace @bolt/website prep # creates data and manifest files
      before_script: ./scripts/check-run-queue.js 'Lint + Jest Tests'
      script:
        - yarn run lint
        - yarn test:js
        # - yarn test:js:quick --maxWorkers=1 # running both `test:js` as comparison; remove or comment out this or other one eventually
        - yarn test:php
        - yarn test:monorepo --maxWorkers=1
        - yarn test:pkgs
      after_success: ./scripts/check-run-success.js 'Lint + Jest Tests'
      after_failure: ./scripts/check-run-failure.js 'Lint + Jest Tests'

    - stage: Pre-deploy
      if: (tag =~ ^v) OR (branch =~ /(master|release)/)
      name: 'Build Drupal Lab'
      script:
        - composer global require hirak/prestissimo
        - cd example-integrations/drupal-lab
        - npm run setup

    - stage: Pre-deploy
      name: 'Build + Deploy Website'
      install:
        - yarn run setup
      script:
        # Clear incache file on normal Travis builds
        - find . -name '.incache' -exec rm -rf {} +
        - yarn run build
        - yarn run deploy
        # need to reset git repo before `update-read-only-git-repos.sh`
        - cd "`git rev-parse --show-toplevel`" && git clean -fd && git reset --hard HEAD && cd -
        - ./scripts/release/update-read-only-git-repos.sh

    - stage: Post-deploy
      name: 'Nightwatch End-to-End (Quick)'
      if: NOT (tag =~ ^v) AND NOT (branch =~ /(master|release|bug|fix)/)
      install:
        - npx json -I -f package.json -e 'delete this.dependencies'
        - npx json -I -f package.json -e 'delete this.scripts.postinstall'
        - npx json -I -f package.json -e 'this.workspaces.packages =  this.workspaces.packages=["packages/testing/testing-nightwatch", "scripts"]'
        - yarn
      before_script: ./scripts/check-run-in-progress.js 'Nightwatch'
      script:
        - export NOW_URL=$(./scripts/get-latest-deploy.js)
        - yarn run test:e2e:quick
      after_success:
        - ./scripts/deploy-branch-alias.js
        - ./scripts/deploy-tagged-release.js

    - stage: Post-deploy
      name: 'Nightwatch End-to-End (Full)'
      if: (tag =~ ^v) OR (branch =~ /(master|release|bug|fix)/)
      install:
        - npx json -I -f package.json -e 'delete this.dependencies'
        - npx json -I -f package.json -e 'delete this.scripts.postinstall'
        - npx json -I -f package.json -e 'this.workspaces.packages =  this.workspaces.packages=["packages/testing/testing-nightwatch", "scripts"]'
        - yarn
      before_script: ./scripts/check-run-in-progress.js 'Nightwatch'
      script:
        - export NOW_URL=$(./scripts/get-latest-deploy.js)
        - yarn run test:e2e:quick
      after_success:
        - ./scripts/deploy-branch-alias.js
        - ./scripts/deploy-tagged-release.js
        - ./packages/testing/testing-nightwatch/nightwatch-report-results.js

notifications:
  email:
    on_success: never
    on_failure: never # @todo re-enable
  slack:
    secure: cNto+gWAoK1JM9jBNG4i4rMSybv3twMbqlFSCohQFBDMwKFMdlyWqFDX6iYKtHxWEDzrZyRz3qiJ8/S44mgjeKJ/xHbHDtPchp/KL2P1htipvwD2EZXobcBEGl83v2rmtFO1WNJUPB3RIJE2yt1wJsX7NIXpDw82hePmaIvNJmtbLpK/J5uaFqGNHIsctmULgVmGSNSTyK4nYxxjNNLd0EvO37Y6VN8FhsKNu2NHMKeeQxinEvETDUh8XuqXZYNWE3PBvVa4OiDhgnr5K27jsnWX+wEmqg0xY+CMf7mUSTqVN61fA7LnHyM0qcGGmB6YTv4QYLMwPydp+nsjDcm3St9D+KOTsQ4ExOaEAL/6EnAEpl8GtxST+ytdqswhCC4yMCO61Hy+M5AoXgDSGrrXHgZakDMAcEVcJdH38791hRxcuM3ldVmHAlAWFdgRLG5rRMVh3qoXz7jbraoTdjyKMegQIQdKR2SX7O9Dv0EEtLz4lTFN2RENvAjLggUPPU+ESoUHmSbwmPGnt7jy3ra2AI3nnYpfn/0e6Op/A3z7HLbdm3XyuNWoTPhy1mc4Adca+HosJ37UPv7nDRIGds1sKYAeWq94+rEk+/6IQ/oRIDRhSYsQbLLWnU6DH4o7iOj7D+X/ngjqmF75nW2s5+7rtdBHFvNzOJalCKHiDTMfdlQ=